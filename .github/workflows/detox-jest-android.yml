name: Detox + Jest Android CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    env:
      ANDROID_HOME: /usr/local/lib/android/sdk
      JAVA_HOME: /usr/lib/jvm/java-17-temurin
      PATH: /usr/local/lib/android/sdk/platform-tools:/usr/lib/jvm/java-17-temurin/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Java (OpenJDK 17)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK commandline tools and components
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "emulator" \
            "system-images;android-34;google_apis;x86_64" \
            "ndk;27.1.12297006"

      - name: Show available devices (debug)
        run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list devices

      - name: Create Android Emulator
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            -n Pixel_7_Pro_API_34 -k "system-images;android-34;google_apis;x86_64" --device "pixel"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # - name: Install npm dependencies
      #   run: npm ci

      # - name: Build Android Debug and Test APKs
      #   working-directory: android
      #   run: ./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug

      #      - name: Start Android Emulator
      #   run: |
      #     nohup $ANDROID_HOME/emulator/emulator -avd Pixel_7_Pro_API_34 \
      #       -no-snapshot-load -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim > emulator.log 2>&1 &

      - name: Wait for Emulator to Boot
        run: |
          adb wait-for-device
          boot_completed=""
          attempts=0
          max_attempts=60  # —É–≤–µ–ª–∏—á–µ–Ω–æ —Å 30 –¥–æ 60
          while [[ "$boot_completed" != "1" && $attempts -lt $max_attempts ]]; do
            sleep 5
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
            echo "Waiting for emulator to boot... ($attempts)"
            ((attempts++))
          done
          if [[ "$boot_completed" != "1" ]]; then
            echo "üö® Emulator failed to boot in time"
            echo "Last 50 lines of emulator log:"
            tail -n 50 emulator.log
            exit 1
          fi
          echo "‚úÖ Emulator booted"

      # - name: Run Jest tests
      #   run: npm test

      # - name: Run Detox tests
      #   run: npx detox test --configuration android.emu.debug --cleanup
